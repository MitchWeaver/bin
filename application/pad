#!/bin/sh
#
# http://github.com/mitchweaver/bin
#
#          ▌
#  ▛▀▖▝▀▖▞▀▌
#  ▙▄▘▞▀▌▌ ▌
#  ▌  ▝▀▘▝▀▘
#
# a tiny temporary notepad system
#
# shellcheck disable=2086
#


: "${PAD_DIR:=${HOME}/.cache/pad}"

usage() {
cat << EOF
${0##*/} - a tiny note system

commands:
-----------
-l  -  list current pads
-r  -  reopen last pad
-u  -  upload pad to ix.io
-s  -  save last pad to ~/
-c  -  cat out the last pad
EOF
}

upload() {
    curl -sF "f:1=<$PAD_DIR/last_pad" ix.io | tee /dev/tty | xsel
}

edit() {
    case ${EDITOR:-vi} in
        # see if we are using a console editor
        # if so, we may need to open a terminal
        vi|vim|nvim|nano|micro)
            ps -p $$ -o ppid= | {
                read -r ppid
                case $(ps -p $ppid -o command=) in
                    ${SHELL##*/}|*/${SHELL##*/})
                        # if attached to a terminal emulator, just open the editor
                        exec ${EDITOR:-vi} -- "$@"
                        ;;
                    *)
                        # if not called from a terminal, open one to edit
                        exec ${TERMINAL_PROG:-xterm} -e ${EDITOR:-vi} -- "$@"
                esac
            }
        ;;
        *)
            # otherwise we have a gui editor, just launch it
            exec $EDITOR -- "$@" &
    esac
}

# lists pads along with the first line of their contents
list_pads() {
    printf '%s\n' "$PAD_DIR"/* | \
    while read -r pad ; do
        case $pad in
            */last_pad)
                ;;
            *)
                read -r first_line <"$pad"
                out=${pad#$PAD_DIR/}
                out=${out%.pad}
                printf '%s: %s\n' "$out" "$first_line"
        esac
    done
}

init() {
    mkdir -p "$PAD_DIR"
}

main() {
    init

    if [ "$1" ] ; then
        case ${1#-} in
            l) list_pads ;;
            r) edit "$PAD_DIR"/last_pad ;;
            s) cp -f "$PAD_DIR"/last_pad ~/"$(date '+%a %b %d - %I:%M %p').pad" ;;
            c) cat "$PAD_DIR"/last_pad ;;
            u) upload ;;
            *)
                if [ -f "$PAD_DIR/$1.pad" ] ; then
                    edit "$PAD_DIR/$1.pad"
                else
                    usage
                fi
        esac
    else
        # use pid for the number, doesn't necessarily need be random/secure here.
        num=$$
        # trim down from the default 5 on linux to 3 digits
        num=${num%??}
        pad=$PAD_DIR/$num.pad
        ln -sf "$pad" "$PAD_DIR"/last_pad
        edit "$pad"
    fi
}

main "$@"
