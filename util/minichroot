#!/bin/sh
#
# http://github.com/mitchweaver/bin
#
# set up a miniature chroot with sbase, ubase, and dash
#

# if not running as root, restart script
if [ $(id -u) -ne 0 ] ; then
    if type doas > /dev/null ; then
        doas $0 "$@"
    else
        sudo -E $0 "$@"
    fi
    exit $?
fi

# ------------ setup directories ------------------------
echo '. creating directories...'

mkdir -p /tmp/minichroot
dir=$(mktemp -d -p /tmp/minichroot --suffix=.chroot)
dl_dir=$(mktemp -d)
echo "$dir" > /tmp/minichroot/latest

cd "$dir"
mkdir -pm 0755 bin boot dev etc home lib \
               local mnt opt proc run root \
               share sys var
mkdir -pm 0755 dev/pts var/log var/run
mkdir -pm 0775 dev/shm

ln -sfn . usr
ln -sfn bin sbin
ln -sfn tmp var/tmp
# ----- download and install core-utils and a shell -----
echo '. building userland...'

cc='gcc -w -O0'
cd $dl_dir

# base / ubase
for base in sbase ubase ; do
    echo "downloading $base"
    git clone -q git://git.suckless.org/$base
    cd $base
    echo "compiling $base"
    make -s CC="$cc" LDFLAGS=-static $base-box
    make -s CC="$cc" LDFLAGS=-static DESTDIR="$dir" PREFIX=/ $base-box install
    cd ..
done

# dash
echo "downloading dash"
shell=dash-0.5.10
wget -q --show-progress http://gondor.apana.org.au/~herbert/dash/files/$shell.tar.gz
tar xf $shell.tar.gz
cd $shell
echo "compiling dash"
./configure --prefix=/ > /dev/null
make -s CC="$cc" LDFLAGS=-static
make -s DESTDIR="$dir" PREFIX=/ install > /dev/null
cd "$dir"/bin
ln -s dash sh
# -------- mount devices and copy required files ------
mount --bind /dev     "$dir"/dev
mount --bind /dev/pts "$dir"/dev/pts
mount --bind /dev/shm "$dir"/dev/shm
mount --bind /proc    "$dir"/proc
mount --bind /sys     "$dir"/sys
export TERM=linux
_PS1="$PS1"
export PS1="$PS1(chroot): "
cp -f /etc/resolv.conf "$dir"/etc/resolv.conf

echo "entering chroot..."
chroot "$dir" /bin/dash
# ------ after exiting chroot, umount and clean up ------
tryumount() {
    path="$1"
    if ! umount "$path" 2> /dev/null ; then
        >&2 echo "umount ${path} failed... trying to umount -f"
        sleep 1
        if ! umount -f "$path" 2> /dev/null ; then
            >&2 echo "umount -f ${path} failed... trying to umount -l"
            sleep 1
            if ! umount -l "$path" 2> /dev/null ; then
                >&2 echo "WARNING: could  not umount -l ${path}!"
            fi
        fi
    fi
}

tryumount "$dir"/dev/pts
tryumount "$dir"/dev/shm
tryumount "$dir"/dev
tryumount "$dir"/proc
tryumount "$dir"/sys

# restore PS1 / TERM
export PS1="$_PS1"
export TERM="$_TERM"
echo "Exited chroot!"
