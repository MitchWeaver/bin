#!/bin/sh
#
# http://github.com/mitchweaver/bin
#
# Records a selected rectangle with ffmpeg.
#
# Depends on: ffmpeg, slop
#

dir=/tmp/record
sock=$dir/sock
pidfile=$dir/pid
quality=1
rate=30

[ ! -d $dir ] && mkdir -p $dir

isrunning() {
    if [ -f $pidfile ] && kill -0 $(cat $pidfile) 2> /dev/null ; then
        return 0
    else
        return 1
    fi
}

case "$1" in
    *h|*help)
        printf "%s\n%s\n%s\n%s\n%s\n" \
            "Options:" \
            "------------------------" \
            "--toggle|-t     -  toggle active/paused" \
            "--stop|-s       -  end recording" \
            "<no option>  -  record"
        ;;
    *s|*stop)
        if $(isrunning) ; then
            echo q >> $sock
            rm -r $dir
        else
            echo "Nothing currently being recorded."
            exit 1
        fi
        ;;
    *t|*toggle)
        if ! $(isrunning) ; then
            echo "Nothing currently being recorded."
            exit 1
        fi

        pid=$(cat $pidfile)
        case $(command ps -o state= $pid) in
            S) 
                kill -s STOP $pid
                echo "Pausing..."
                ;;
            T)
                kill -s CONT $pid
                echo "Resuming..."
        esac
        ;;
    *)
        if $(isrunning) ; then
            echo "Another recording instance already exists!"
            exit 1
        fi

        echo > $sock

        set $(slop -q -o -f '%x %y %w %h')

        # NOTE: need this for mp4s to play in firefox, requires ffmpeg 4.0.2+ "-pix_fmt yuv420p"
        #       note-note: this is breaking script for some people if added?
        <$sock ffmpeg -y -f x11grab -s ${3}x${4} \
            -r $rate -i :0.0+${1},${2} -vcodec libx264 -qscale $quality \
            "$(date '+%a %b %d - %l:%M %p')".mp4 1> /dev/null 2> /tmp/record_log &

        # set to the last core, (helps when recording games that are single threaded)
        taskset -pc $(($(nproc) - 1)) $!

        # set our priority to be last, (don't bog down the computer)
        renice 999 $! > /dev/null

        echo $! > $pidfile
esac
