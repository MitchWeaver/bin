#!/bin/sh
#
# http://github.com/mitchweaver/bin
#
# torrent manager using aria2c
#

: "${TORRENT_QUEUE_DIR:=${HOME}/.torrents}"
queue=$TORRENT_QUEUE_DIR/queue
completed=$TORRENT_QUEUE_DIR/completed
downloading=$TORRENT_QUEUE_DIR/downloading
scripts=$TORRENT_QUEUE_DIR/scripts
logs=$TORRENT_QUEUE_DIR/logs

usage() {
>&2 cat << EOF
torrent-queue
--------------------------
a  | add a new link to the queue
d  | start the daemon
EOF
}

init() {
    mkdir -p "$TORRENT_QUEUE_DIR" "$completed" \
        "$downloading" "$scripts" "$logs"
    touch "$queue"
}

sanitize_link() {
    res=${1#*=}
    res=${res#*=}
    res=${res%%udp*}
    res=${res%\&*}

    # convert %20, '+, and '.' to spaces if needed
    printf '%s\n' "$res" | \
    sed -e 's/%20/ /g' -e 's/\+/ /g' -e 's/\./ /g'
}

dl() {
    cd "$downloading" || return 1
    link=$1
    file=$(sanitize_link "$link")
    log=$logs/$file.log

# create script to be ran at download completion
cat >"$scripts/$file" <<EOF
#!/bin/sh
mv -f "$downloading/$file" "$completed"/
notify-send "$file has finished"

# remove junk
rm -f "$log"
rm -f "$completed/$file"/*.aria2
rm -f "$scripts/$file"
for i in txt TXT nfo info ; do
    rm -f "$completed/$file".$i 2>/dev/null ||:
done
EOF
chmod +x "$scripts/$file"

    aria2c -d "$downloading/$file" \
        --on-bt-download-complete="$scripts/$file" \
        --disable-ipv6 \
        --enable-dht=true \
        --enable-dht6=false \
        --file-allocation=prealloc \
        --check-integrity=true \
        --continue=true \
        --max-concurrent-downloads=20 \
        --seed-time=0 \
        "$link" >>"$log" 2>&1
}

daemon() {
    while sleep 5 ; do
        # vpn killswitch
        if ! pgrep -x openvpn >/dev/null ; then
            pkill -9 aria2c
            continue
        fi
        while [ -s "$queue" ] ; do
            read -r link < "$queue"
            { dl "$link" || printf '%s\n' "$link" >>"$queue".rej ; } &
            sed -i '1d' "$queue"
        done
    done
}

init

case ${1#-} in
    a) [ "$2" ] && printf '%s\n' "$2" >> "$queue" ;;
    d) daemon ;;
    *) usage
esac
