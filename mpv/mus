#!/bin/sh
#
# http://github.com/mitchweaver/bin
#
# a tiny ytdl music library manager
#
# deps: mpv youtube-dl
# optional: feh, ranger, dmenu, dimensions

# - - - - - - - - config - - - - - - - - - - - - -
lib=${HOME}/var/music
musdir=/tmp/mus
mkdir -p "$musdir"
cur="$musdir"/playing
mpvflags="--gapless-audio --load-unsafe-playlists --user-agent='Mozilla/5.0'"
mpvsock=/tmp/mpvsocket
menuprog(){ ${HOME}/bin/wrapper/menu -p Play: "$@" ; }
pickprog() {
    f=/tmp/mus-$$.tmp
    :> $f
    st -T floating-st -n floating-st -e \
        ranger --cmd='set viewmode!' --choosefile=$f "$1"
    cat $f || exit 1
    rm $f
}
imageprog() {
    set $(dimensions) "$1"
    w=$(( $1 / 4 ))
    feh -N -Z -w -s -q -. -^ feh -g ${w}x${w} "$3" &
    echo $! > "$musdir"/imagepid
}
# - - - - - - - - - - - - - - - - - - - - - - - -

usage() {
cat << EOF
mus
-------------
menu,-m       -   choose file with menu program
pick,-p       -   choose file with filepicker program
search,-s     -   search library for given attributes:
                    '-loc', '-genre', '-year', '-type'
                    '-artist', '-album'
art,-a        -   view currently playing artwork
info,-i       -   print info about currently playing
file,-f       -   print path to currently playing
playing,-l    -   return exit code if playing
template,-t   -   create a .mus skeleton template
quit,-q       -   stop playing
EOF
}

# example usage: "mus -t 'YEAR - ALBUM NAME'
template() {
    file="$1".mus
    set -- $@
    year=$1
    shift 2

cat > "$file" << EOF
artist='$(basename "$PWD")'
album='$*'
year=$year
type=LP
location=
genres=''
source=''
art=''
EOF
}

info() {
if playing ; then
. "$cur"
cat << EOF
Artist:   $artist
Album:    $album
Year:     $year
Type:     $type
Genres:   $genres
Location: $location
Source:   $source
EOF
fi
exit
}

playing() {
    pgrep mpv > /dev/null && [ -f "$cur" ]
    return $?
}

play() {
    pgrep mpv > /dev/null && quit
    cp -f "$1" "$cur"
    . "$1"
    mpv $mpvflags --really-quiet --title=mpv --no-video \
        --input-ipc-server=$mpvsock "$source" &
    echo $! > "$musdir"/mpvpid
    imageprog "$art"
}

menu() {
    choice=$(find "$lib" -name "*.mus" -type f | \
             sed -e "s|$lib\/||g" -e 's|\.mus$||g'| menuprog)
    [ "$choice" ] && play "$lib/$choice.mus"
}

pick() {
    choice="$(pickprog $lib)"
    [ -f "$choice" ] && play "$choice"
}

art() {
    if playing ; then
        . "$cur"
        imageprog "$art"
    fi
}

quit() {
    kill $(cat "$musdir"/mpvpid) > /dev/null 2>&1
    kill $(cat "$musdir"/imagepid) > /dev/null 2>&1
    rm -f "$musdir"/imagepid "$musdir"/mpvpid "$cur"
    rmdir "$musdir" 2> /dev/null
}

# This could surely be optimized, but it completes searches
# in < 0.5 seconds on my x200, so its fine for now.
search() {
    if [ $# -eq 0 ] || [ $(( $# % 2 )) -ne 0 ] ; then
        exit 1
    fi
    for arg in "$@" ; do
        case "$arg" in
            -year)   _year="$2"   ;;
            -type)   _type="$2"   ;;
            -genre)  _genre="$2"  ;;
            -loc)    _loc="$2"    ;;
            -artist) _artist="$2" ;;
            -album)  _album="$2"
        esac
        shift
    done
    check() { echo "$1" | grep -i "$2" > /dev/null || unset file ; }
    find "$lib" -type d ! -path "$lib" ! -path "*.git*" | while read -r dir ; do
        find "$dir" -type f | while read -r file ; do
            . "$file" || continue
            if [ "$_year" ] ; then [ "$year" = "$_year"  ] || unset file ; fi
            [ "$_type"   ] && check "$type"     "$_type"
            [ "$_genre"  ] && check "$genres"    "$_genre"
            [ "$_loc"    ] && check "$location" "$_loc"
            [ "$_artist" ] && check "$artist"   "$_artist"
            [ "$_album"  ] && check "$album"    "$_album"
            if [ "$file" ] ; then
                file="${file#$lib/}"
                echo ${file%.mus}
            fi
            unset year type genre location artist album
        done
    done
}

main() {
    pgrep mpv > /dev/null || rm -f $cur 2> /dev/null
    if [ -f "$1" ] ; then
        play "$1"
    else
        case "$1" in
            pick|-p) pick ;;
            menu|-m) menu ;;
            search|-s) shift ; search "$@" ; exit $? ;;
            art|-a) art ;;
            file|-f) playing && echo $cur ;;
            playing|-l) playing ; exit $? ;;
            template|-t) shift ; template "$@" ;;
            quit|-q) quit ;;
            info|-i) info ;;
            *) usage
        esac
    fi
}

main "$@"
