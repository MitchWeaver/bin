#!/bin/sh
#
# http://github.com/mitchweaver/bin
#
# mmt - Mitch's MPV Tool
#
# control mpv through a socket with nc
#

sock=${MPV_SOCKET:-/tmp/mpvsocket}

usage() {
>&2 cat <<EOF
[Mitch's MPV Tool]

To use, add 'input-ipc-server=/tmp/mpvsocket' to your mpv.conf
(alternatively you can specify via \$MPV_SOCKET in the environment)

Options:
----------
-t     toggle play/pause
-n     skip to next in playlist
-p     skip to prev in playlist
-f     seek forward by 30 seconds
-b     seek backward by 30 seconds
-q     stop playback
-k     print given metadata key, one of:
       (filename, artist, title, album, year)

EOF
exit 1
}

cmd() {
    if [ ! -S "$sock" ] ; then
        >&2 printf '%s\n' "$sock does not exist."
        exit 1
    fi
    printf '%s\n' "$*" | nc -U -N -- "$sock"
}

get() {
    res=$(cmd "{\"command\": [\"get_property_string\", \"$1\"]}\"")
    res=${res%,\"re*}
    res=${res%\"}
    res=${res#*\":}
    res=${res#\"}
    printf '%s\n' "$res"
}

killmpv() {
    kill $(pgrep -f "$sock") 2>/dev/null
    rm "$sock" 2>/dev/null
}

case $1 in
    -t) cmd cycle pause   ;;
    -n) cmd playlist-next ;;
    -p) cmd playlist-prev ;;
    -f) cmd seek +30      ;;
    -b) cmd seek -30      ;;
    -q) killmpv ;;
    -k) case $2 in
            title)    get 'metadata/by-key/title'  ;;
            artist)   get 'metadata/by-key/artist' ;;
            album)    get 'metadata/by-key/album'  ;;
            year)     get 'metadata/by-key/date'   ;;
            filename) get filename ;;
            *) usage
        esac
        ;;
     *) usage
esac
