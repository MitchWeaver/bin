#!/bin/sh
#
# http://github.com/mitchweaver/bin
#
# location rotating openvpn daemon with chrooted
# nonpriv user with my settings
#
# shelcheck bugs:
# shellcheck disable=2120,SC2119,SC2035,SC1102,SC2034
#

# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
# Settings
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
: "${OVPN_DIR:=/etc/openvpn}"
: "${LOGIN:=$OVPN_DIR/pia_login}"
: "${CERT:=$OVPN_DIR/ca.rsa.4096.crt}"
: "${MINUTES:=30}"
OPENVPN_LOG=/var/log/openvpn.log
PIAVPN_LOG=/var/log/${0##*/}.log
CHROOT_USER=_openvpn
CHROOT_DIR=/var/openvpn
if [ -d /run ] ; then
    PIDFILE=/run/openvpn.pid
elif [ -d /var/run ] ; then
    PIDFILE=/var/run/openvpn.pid
fi
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

log() { printf '[*] %s\n' "$*" >>"$PIAVPN_LOG" ; }
die() { >&2 printf '%s\n' "$*" ; exit 1 ; }

usage() {
>&2 cat <<EOF
Usage: ${0##*/} [options]

Options:
--------------------
[-d]    start the daemon
[-i]    check is running
[-c]    print current location
[-l]    view daemon log
[-r]    restart openvpn
[-q]    quit
EOF
exit 1
}

init() {
    # re-run scipt as root if we are not already
    if [ "$(id -u)" -ne 0 ] ;then
        sudo "$0" "$@"
        exit $?
    fi

    # create the restricted user/group if they doesn't exist
    id $CHROOT_USER >/dev/null 2>&1 || \
        useradd -m -s /sbin/nologin $CHROOT_USER
    grep "^$CHROOT_USER:" /etc/group >/dev/null || groupadd $CHROOT_USER

    if [ ! -d $CHROOT_DIR ] ; then
        mkdir $CHROOT_DIR
        chown $CHROOT_USER $CHROOT_DIR
    fi

    # disable ipv6 to prevent leaks
    sysctl -q -w net.ipv6.conf.all.disable_ipv6=1

    [ -f "$CERT"  ] || die "Missing: $CERT"
    [ -f "$LOGIN" ] || die "Missing: $LOGIN"
}

get_loc() {
read -r LOC <<-EOF
$(sort -R <<EEOF
us-atlanta
us-denver
us-chicago
us-houston
us-newyorkcity
us-seattle
ca-montreal
ca-toronto
ca-vancouver
de-berlin
de-frankfurt
austria
belgium
czech
denmark
fi
france
hungary
ireland
italy
japan
nl
nz
no
poland
ro
sg
spain
sweden
swiss
EEOF
)
EOF
# mexico
}

run() {
    PORT=1197
    DOMAIN=privateinternetaccess.com
    REMOTE=$LOC.$DOMAIN
    exec "$(command -v openvpn)" \
        --remote "$REMOTE" "$PORT" \
        --auth-user-pass "$LOGIN" \
        --ca $CERT \
        --log $OPENVPN_LOG \
        --writepid $PIDFILE \
        --chroot $CHROOT_DIR \
        --user $CHROOT_USER \
        --group $CHROOT_USER \
        --daemon \
        --client \
        --dev tun \
        --compress lz4 \
        --cipher aes-256-cbc \
        --auth sha256 \
        --auth-nocache \
        --connect-retry 1 1 \
        --reneg-sec 0 \
        --nobind \
        --disable-occ \
        --remote-cert-tls server \
        --persist-key \
        --persist-tun \
        --persist-local-ip \
        --tmp-dir . \
        --verb 1 \
        --nice -1
}

isrunning() {
    [ -f $PIDFILE ] || return 1
    read -r pid <$PIDFILE
    ps -U "$CHROOT_USER" -p "$pid" >/dev/null
    return $?
}

current() {
    [ -f $PIDFILE ] || return 1
    read -r pid <$PIDFILE
    cmd=$(ps -xU "$CHROOT_USER" -p "$pid" -o command=)
    # shellcheck disable=2181
    if [ $? -eq 0 ] ; then
        cmd=${cmd#*--remote }
        printf '%s\n' "${cmd%%.*}"
    fi
}

stop_vpn() {
    isrunning || die 'Not running.'
    read -r pid <$PIDFILE
    kill "$pid" && kill -9 "$pid"
    rm $PIDFILE
}

start_vpn() {
    isrunning && die 'Already running.'
    init
    get_loc
    run &
    log "started openvpn on pid $! using location: $LOC"
}

start_daemon() {
    init "$@"

    echo $$ > "/var/cache/${0##*/}.pid"

    :>"$PIAVPN_LOG"
    chmod 600 "$PIAVPN_LOG"

    # while : ; do
        # log 'changing locs'
        start_vpn &

        # -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
        # fix later
        # shift_amount=$(LC_ALL=C \
        # tr -dc 0-9 < /dev/urandom | \
        # dd ibs=1 obs=1 count=2 2>/dev/null)

        # if [ "$(LC_ALL=C tr -dc 0-9 < /dev/urandom | \
        #     dd ibs=1 obs=1 count=1 2>/dev/null)" -eq 1 ] ; then
        #     amount="$(( MINUTES * 60 - shift_amount))"
        # else
        #     amount="$(( MINUTES * 60 + shift_amount))"
        # fi
        # log "sleeping for $amount seconds"
        # sleep "$amount"
        # -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
        
        # stop_vpn
    # done >>"$PIAVPN_LOG" 2>&1 &
}

stop_daemon() {
    if [ -f "/var/cache/${0##*/}.pid" ] ; then
        read -r pid < "/var/cache/${0##*/}.pid"
    else
        die "Daemon not running or pid could not be found."
    fi
    kill "$pid" && kill -9 "$pid"
    pkill -f vpn
    rm "$pid"
    stop_vpn
}

case ${1#-} in
    h|'')
        usage
        ;;
    i)
        isrunning
        ;;
    c)
        current
        ;;
    l)
        exec sudo tail -f "$PIAVPN_LOG"
        ;;
    *)
        init "$@"

        case ${1#-} in
            d) start_daemon "$@" ;;
            q) stop_daemon ;;
            r) stop_vpn ; start_vpn ;;
            *) usage
        esac
esac
