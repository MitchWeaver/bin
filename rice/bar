#!/bin/sh
#
# http://github.com/mitchweaver/bin
#
# The bar is dwm's bar, with a lot of patches.
# See them here: http://github.com/mitchweaver/suckless
#
# Preview: http://0x0.st/iAeY.png
#

# -*-*-*-*-*-* init -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
bar_fifo=${XDG_CACHE_HOME:-~/.cache}/bar
song_skroll=${XDG_CACHE_HOME:-~/.cache}/song_skroll

rm $bar_fifo $song_skroll 2>/dev/null ||:
mkfifo $bar_fifo

# -*-*-*-*-*-* daemons *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
while read -r line ; do
    xsetroot -name "$line"
done <$bar_fifo &

pids=$!

while sleep 3 ; do
    mmt -i || continue
    case $(mmt -k filename) in
        ytsearch*) continue # wait until we load the title
    esac
    song | skroll -n 40 -d 0.2 -r -l >>$song_skroll
    rm $song_skroll 2>/dev/null ||:
done &

pids="$pids $!"

trap 'for p in $pids ; do kill -9 $p ; done ; \
    rm $bar_fifo $song_skroll ; xsetroot -name killed' \
    INT TERM QUIT KILL EXIT

# -*-*-*-*-* helper functions -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
get_interface() {
    for int in em0 urtwn0 iwn0 ; do
        if ifconfig $int 2>/dev/null | grep active >/dev/null ; then
            echo $int
            break
        fi
    done
}

fmt_human() {
      if [ $1 -gt 1073741824 ] ; then printf '%sG' $(( $1 / 1073741824 )) 
    elif [ $1 -gt 1048576    ] ; then printf '%sM' $(( $1 / 1048576 ))
    elif [ $1 -gt 1024       ] ; then printf '%sK' $(( $1 / 1024 ))
                                 else printf '%sB' $1 ; fi
}

# -*-*-*-*-* modules -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*--*-*-*
get_vpn() {
while read -r cmd ; do
    case $cmd in
        openvpn*)
            vpn=${cmd##* }
            vpn=${vpn##*/}
            vpn=" ${vpn%.ovpn}"
            break
    esac
done <<EOF
$(ps -wwU root -o 'command')
EOF
printf '%s' "${vpn:- None}"
}

get_song() {
    if [ -f $song_skroll ] ; then
        while read -r line ; do
            song=$line
        done <$song_skroll
        printf '🎵 %s /' "${song:-loading...}"
    fi
}

get_ssid() {
    int=$(get_interface)
    case $int in
        em0) ssid='  Wired' ;;
        iwn0|urtwn0)
            out=$(ifconfig $int)
            case $out in
                *active*)
                    out=${out##*'nwid '}
                    out=${out%%' chan'*}
                    ssid="  $out"
            esac
    esac
    printf '%s' "${ssid:-❌ No Internet}"
}

get_link_qual() {
    int=$(get_interface)
    case $int in
        em0) ;;
        iwn0|urtwn0)
            ifconfig $int | while read -r line ; do
                case $line in
                    *' active')
                        read -r _ _ _ _ _ _ _ dBm _
                        printf ' %s%%' $(( 2 * (${dBm%dBm} + 100) ))
                        break
                esac
            done
    esac
}

get_traffic() {
while read -r line ; do
    set -- $line
done <<EOF
$(netstat -c 1 -w 1 -b)
EOF
printf ' %s  %s' \
    "$(fmt_human $1)" \
    "$(fmt_human $2)"
}

get_cpu() {
    set -- $(sysctl -n vm.loadavg)
    pre=${1%.*}
    suf=${1#*.}
    printf '💻 %s' $(( ${pre#0}$suf / ${NPROC:?\$NPROC is not set} ))%
}

get_mem() {
# max=$(($(sysctl -n hw.physmem) / 1024 / 1024))

while read -r _ _ line _ ; do
    used=$line
done <<-EOF
$(vmstat)
EOF

printf ' %s' "${used}" #/${max}
}

get_bat() {
    p=$(apm -l)
    case $(apm -a) in
        1) emoji='' ;;
        0)
              if [ $p -gt 80 ] ; then emoji=''
            elif [ $p -gt 60 ] ; then emoji=''
            elif [ $p -gt 35 ] ; then emoji=''
            elif [ $p -gt 10 ] ; then emoji=''
                                 else emoji=''; fi
    esac
    printf "%s  %s%%" "$emoji" "$p"
}

get_vol() {
    printf '🔊 %s%%' $(( $(mixerctl -n outputs.master) * 100 / 255 ))
}

get_space() {
    df -h | while read -r line ; do
        case $line in
            */home)
                set -- $line
                printf ' %s' $4
                break
        esac
    done
}

# -*-*-*-*-*-* main *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

main() {
    while sleep 1 ; do
        mmt -i || pkill skroll
        printf '%s %s / %s / %s / %s / %s / %s / %s / %s / %s\n' \
            "$(get_song)" \
            "$(get_vpn)" \
            "$(get_ssid)$(get_link_qual)" \
            "$(get_traffic)" \
            "$(get_cpu)" \
            "$(get_mem)" \
            "$(get_space)" \
            "$(get_bat)" \
            "$(get_vol)" \
            "$(date "+%a %I:%M %p") "
    done >$bar_fifo
}

main
